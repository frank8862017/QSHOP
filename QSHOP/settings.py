"""
Django settings for faceunlock_server project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gyz#ysmm7(kz2)3(k8wedh0f#^-%3pskamvy+t#1x0!#-2pkr_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [

    #添加五个应用
    'manager.apps.ManagerConfig',
    'goods.apps.GoodsConfig',
    'user.apps.UserConfig',
    'store.apps.StoreConfig',
    'home.apps.HomeConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'QSHOP.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'QSHOP.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'qshop',
        'USER': 'root',
        'PASSWORD': '426425',
        'HOST': 'localhost',  # 也可以写ip地址
        'PORT': '3306'
    },
    # 'slave': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'qshop',
    #     'USER': 'root',
    #     'PASSWORD': '426425',
    #     'HOST': 'localhost',
    #     'PORT': '3308'
    #
    # },

}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

SESSION_EXPIRE_AT_BROWSER_CLOSE=True  # 关闭浏览器 cookie 失效

STATIC_URL = '/static/'
# 设置静态文件存储路径
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,"static"),
)

# 多媒体文件上传存储路径
MEDIA_ROOT=os.path.join(BASE_DIR,"static")

# MEDIA_URL='/media/'   #用于解析静态文件地址



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# smtp服务的邮箱服务器 我用的是163
EMAIL_HOST = 'smtp.163.com'
#smtp服务固定的端口是25，上线时候端口改为994
EMAIL_PORT = 25
#发送邮件的邮箱
EMAIL_HOST_USER = '18737307883@163.com'
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'lh1111'
#收件人看到的发件人
EMAIL_FROM = '王炸<18737307883@163.com>'

#上线之后发送邮件需要加
# EMAIL_USE_SSL=True

#主、从数据库的连接
# DATABASE_ROUTERS=['QSHOP.myrouter.DBRouter']

# 日志配置
if DEBUG:
    DEBUG_LOG_BASE_PATH = os.path.join(BASE_DIR, 'logs')
else:
    DEBUG_LOG_BASE_PATH = os.path.join(BASE_DIR, 'logs')

if not os.path.isdir(DEBUG_LOG_BASE_PATH):
    os.mkdir(DEBUG_LOG_BASE_PATH)

LOGGING={
    'version':1,
    'disable_existing_loggers':False,
    'formatters':{
        'standard':{
            'format':'%(asctime)s %(levelname)s %(name)s %(module)s %(funcName)s %(message)s'
        },
        'simple':{
            'format':'%(levelname)s %(module)s %(asctime)s %(message)s'
        }
    },
    'filters':{
    },
    'handlers':{
        'default':{
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename':os.path.join(DEBUG_LOG_BASE_PATH,'all.log'),
            'formatter':'standard',
        },
        'error':{
            'level':'ERROR',
            'class':'logging.FileHandler',
            'filename':os.path.join(DEBUG_LOG_BASE_PATH,'error.log'),
            'formatter':'standard',
        },
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter':'standard',
        },
        'request':{
            'level':'INFO',
            'class':'logging.FileHandler',
            'filename':os.path.join(DEBUG_LOG_BASE_PATH,'request.log'),
            'formatter':'standard',
        },
        'db':{
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename':os.path.join(DEBUG_LOG_BASE_PATH,'db.log'),
        },
    },
    'loggers':{
        'django.request':{
            'handlers':['error','console'],
            'level':'ERROR',
            'propagate':False,
        },
        'django.db.backends':{
            'handlers':['db','error'],
            'level':'DEBUG',
            'propagate':False
        },
        'goods':{
            'handlers':['default','error','console','request'],
            'level':'DEBUG',
            'propagate':False
        },
        'manager': {
            'handlers': ['default', 'error', 'console', 'request'],
            'level': 'DEBUG',
            'propagate': False
        },
        'user': {
            'handlers': ['default', 'error', 'console', 'request'],
            'level': 'DEBUG',
            'propagate': False
        },
        'store': {
            'handlers': ['default', 'error', 'console', 'request'],
            'level': 'DEBUG',
            'propagate': False
        },
        'home': {
            'handlers': ['default', 'error', 'console', 'request'],
            'level': 'DEBUG',
            'propagate': False
        },
    }
}